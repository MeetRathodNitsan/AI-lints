name: AI Code Lint

on:
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]

jobs:
  ai-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m venv .venv
          .venv/bin/pip install --upgrade pip
          .venv/bin/pip install -r requirements.txt
          .venv/bin/pip install requests fastapi uvicorn

      # Step 1: Start the FastAPI server in the background üöÄ
      - name: Start AI Linting Server
        run: |
          # Replace 'main:app' with the correct module and app name for your FastAPI application.
          # The '&' runs the process in the background.
          .venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000 &
          # Wait a few seconds to ensure the server is fully started.
          sleep 5

      - name: Get changed Python files
        id: files
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.py$' || true)
          echo "CHANGED_FILES=${CHANGED_FILES//$'\\n'/' '}" >> $GITHUB_ENV

      - name: Run AI Lint
        if: env.CHANGED_FILES != ''
        run: |
          echo "[DEBUG] Files to lint: $CHANGED_FILES"
          for f in $CHANGED_FILES; do
            # The script should now be able to connect to the server
            .venv/bin/python ai_lint.py "$f"
          done

      - name: Check for unstaged changes
        run: |
          git_status=$(git status --porcelain)
          if [[ -n "$git_status" ]]; then
            echo "‚ùå Files were fixed automatically. Please commit the changes."
            git diff
            exit 1
          else
            echo "‚úÖ All files already clean."
          fi